<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="assets/admfti.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <title>Dashboard Admin FTI</title>
  </head>
  <body>
    <%- include('../komponen/sidebar');%>
    <section class="home">
      <div class="header">
        <div class="text">Dashboard</div>
        <div class="notification-icon">
          <i class="bx bx-bell"></i>
        </div>
      </div>
      <div class="content">
        <div class="chart-container">
          <canvas id="statsChart"></canvas>
        </div>
      </div>
    </section>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const organizationsCount = <%= JSON.stringify(orga) %>;
        const activitiesCount = <%= JSON.stringify(kegiatan) %>;
        const beritaCount = <%= JSON.stringify(berita) %>;

        const ctx = document.getElementById('statsChart').getContext('2d');
        const statsChart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: ['Organisasi', 'Kegiatan', 'Publikasi'],
            datasets: [{
              label: 'Jumlah Pengajuan Organisasi, Kegiatan, dan Publikasi Informasi',
              data: [organizationsCount, activitiesCount, beritaCount],
              backgroundColor: [
                'rgba(107, 181, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 151, 205, 0.2)'

              ],
              borderColor: [
                'rgba(107, 181, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 151, 205, 1)'
              ],
              borderWidth: 2
            }]
          },
          options: {
            indexAxis: 'y',
            maintainAspectRatio: false,
            scales: {
              x: {
                beginAtZero: true
              }
            }
          }
        });
      });
    </script>
    <div id="notification-container" class="notification-container"></div>
    <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
    <script>
      const socket = io("http://localhost:3000");

      socket.on("connect", () => {
        console.log("Connected to Admin FTI");
        socket.emit("joinRoom", "adminfti");
      });

      socket.on("new_kegiatan", (data) => {
        console.log(data);
        console.log("Notifikasi baru:", data);
        showNotification(data, "kegiatan");
      });

      socket.on("new_kegiatanMhs", (data) => {
        console.log(data);
        console.log("Notifikasi baru dari Mahasiswa:", data);
        showNotification(data, "kegiatan");
      });

      socket.on("new_organisasi", (data) => {
        console.log(data);
        console.log("Notifikasi baru dari Mahasiswa:", data);
        showNotification(data, "orga");
      });

      socket.on("new_berita", (data) => {
        console.log(data);
        console.log("Notifikasi baru:", data);
        showNotification(data, "berita");
      });

      function showNotification(data, type) {
        const notificationContainer = document.getElementById(
          "notification-container"
        );
        const notification = document.createElement("div");
        notification.className = "notification";
        if (type === "kegiatan") {
          notification.innerHTML = `
      <strong>${data.message}</strong>
      <p>${data.kegiatan.namaKegiatan} oleh ${data.kegiatan.nama}</p>
    `;
        } else if (type === "orga") {
          notification.innerHTML = `
      <strong>${data.message}</strong>
      <p>${data.orga.namaOrga} oleh ${data.orga.nama}</p>
    `;
        } else if (type === "berita") {
          notification.innerHTML = `
      <strong>${data.message}</strong>
      <p>${data.berita.judul} oleh ${data.berita.nama}</p>
    `;
        }
        notificationContainer.appendChild(notification);

        setTimeout(() => {
          notificationContainer.removeChild(notification);
        }, 5000);
      }
    </script>
  </body>
</html>
